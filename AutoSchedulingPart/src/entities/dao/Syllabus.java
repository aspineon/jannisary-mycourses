package entities.dao;

// Generated Apr 11, 2011 8:27:09 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import java.util.ArrayList;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
/**
 * Syllabus generated by hbm2java
 */
public class Syllabus implements java.io.Serializable {

	private Integer syllabusId;
	private Lecturer lecturer;
	private Course course;
	private String semester;
	private int year;
	private Integer sectionNo;
	private Set schedules = new HashSet(0);

	public Syllabus() {
	}

	public Syllabus(Lecturer lecturer, Course course, String semester, int year) {
		this.lecturer = lecturer;
		this.course = course;
		this.semester = semester;
		this.year = year;
	}

	public Syllabus(Lecturer lecturer, Course course, String semester,
			int year, Integer sectionNo, Set schedules) {
		this.lecturer = lecturer;
		this.course = course;
		this.semester = semester;
		this.year = year;
		this.sectionNo = sectionNo;
		this.schedules = schedules;
	}
//***************************************************************************************
//Author: 			Onur Özey
//Description:		Her bir tabda 1,2,3 ve 4. sýnýf derslerinin gösterilmesi gerekiyor.
//					Ýlgili procedure parametre verilerek bu durum hallediliyor.
	@SuppressWarnings("unchecked")
	public ArrayList<Syllabus> getSyllabusByGrade(int year, String semester, int grade)
	{
		Session session = null;
		ArrayList<Syllabus> syllabusList = new ArrayList<Syllabus>();
		try
		{
			 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
			 session = sessionFactory.openSession();
			 
			 Query query = session.getNamedQuery("getSyllabusByGrade");
			 query.setParameter("pYear", year);
			 query.setParameter("pSemester", semester);
			 query.setParameter("pGrade", grade); 
			 syllabusList = (ArrayList<Syllabus>)query.list();
		}
		catch(Exception ex)
		{
			ex.getMessage();
		}		
		return syllabusList;
	}
//***************************************************************************************
	@SuppressWarnings("unchecked")
	public ArrayList<Syllabus> getSyllabusByCourseName(String courseName)
	{
		Session session = null;
		ArrayList<Syllabus> syllabusList = new ArrayList<Syllabus>();
		try
		{
			 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
			 session = sessionFactory.openSession();
			 
			 Query query = session.getNamedQuery("getSyllabusByCourseName");
			 query.setParameter("pCourseName", courseName);
			 syllabusList = (ArrayList<Syllabus>)query.list();
		}
		catch(Exception ex)
		{
			ex.getMessage();
		}		
		return syllabusList;
	}
//***************************************************************************************	
	@SuppressWarnings("unchecked")
	public ArrayList<Syllabus> getSyllabusAll()
	{
		Session session = null;
		ArrayList<Syllabus> syllabusList = new ArrayList<Syllabus>();
		try
		{
			 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
			 session = sessionFactory.openSession();
			 
			 Query query = session.getNamedQuery("getSyllabusAll");
			 syllabusList = (ArrayList<Syllabus>)query.list();
		}
		catch(Exception ex)
		{
			ex.getMessage();
		}		
		return syllabusList;
	}	
//***************************************************************************************
	@SuppressWarnings("unchecked")
	public ArrayList<Syllabus> getSyllabusByYear(int year)
	{
		Session session = null;
		ArrayList<Syllabus> syllabusList = new ArrayList<Syllabus>();
		try
		{
			 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
			 session = sessionFactory.openSession();
			 
			 Query query = session.getNamedQuery("getSyllabusByYear");
			 query.setParameter("pYear", year);
			 syllabusList = (ArrayList<Syllabus>)query.list();
		}
		catch(Exception ex)
		{
			ex.getMessage();
		}		
		return syllabusList;
	}	
//***************************************************************************************	
	@SuppressWarnings("unchecked")
    public ArrayList<Syllabus> getDeanCourses(int year, String semester)
    {
		 Session session = null;
         ArrayList<Syllabus> deanCourseNameList = null;
         try
         {
        	 SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
             session = sessionFactory.openSession();
             Query query = session.getNamedQuery("getDeanCourses");
             query.setParameter("pYear", year);
             query.setParameter("pSemester", semester);
             deanCourseNameList = (ArrayList<Syllabus>)query.list();
         }
         catch(Exception ex)
         {
             ex.getMessage();
         }
         return deanCourseNameList;
     }
//**************************************************************************************	
	public Integer getSyllabusId() {
		return this.syllabusId;
	}

	public void setSyllabusId(Integer syllabusId) {
		this.syllabusId = syllabusId;
	}

	public Lecturer getLecturer() {
		return this.lecturer;
	}

	public void setLecturer(Lecturer lecturer) {
		this.lecturer = lecturer;
	}

	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	public String getSemester() {
		return this.semester;
	}

	public void setSemester(String semester) {
		this.semester = semester;
	}

	public int getYear() {
		return this.year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public Integer getSectionNo() {
		return this.sectionNo;
	}

	public void setSectionNo(Integer sectionNo) {
		this.sectionNo = sectionNo;
	}

	public Set getSchedules() {
		return this.schedules;
	}

	public void setSchedules(Set schedules) {
		this.schedules = schedules;
	}

}
