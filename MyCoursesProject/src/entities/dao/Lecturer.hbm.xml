<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Apr 11, 2011 11:14:10 PM by Hibernate Tools 3.4.0.CR1 -->
<hibernate-mapping>
    <class name="entities.dao.Lecturer" table="Lecturer" catalog="erhun_db3">
        <id name="lecturerId" type="java.lang.Integer">
            <column name="Lecturer_Id" />
            <generator class="identity" />
        </id>
        <many-to-one name="department" class="entities.dao.Department" fetch="select">
            <column name="Department_Id" not-null="true" />
        </many-to-one>
        <property name="lecturerName" type="string">
            <column name="Lecturer_Name" length="50" not-null="true" unique="true" />
        </property>
        <property name="title" type="string">
            <column name="Title" length="50" not-null="true" />
        </property>
        <property name="email" type="string">
            <column name="Email" length="100" />
        </property>
        <property name="telephone" type="string">
            <column name="Telephone" length="11" />
        </property>
        <set name="syllabuses" table="Syllabus" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="Lecturer_Id" not-null="true" />
            </key>
            <one-to-many class="entities.dao.Syllabus" />
        </set>
    </class>
    
    <sql-query name="addLecturer">
    <return alias="lecturer" class="entities.dao.Lecturer"/>
        <![CDATA[CALL AddLecturer(:pLecturerName,:pTitle,:pDepartment,:pEmail,:pTelephone)]]>
    </sql-query>
    
    <sql-query name="deleteLecturer">
    <return alias="lecturer" class="entities.dao.Lecturer"/>
        <![CDATA[CALL DeleteLecturer(:pLecturerId)]]>
    </sql-query>
    
    <sql-query name="updateLecturer">
    <return alias="lecturer" class="entities.dao.Lecturer"/>
        <![CDATA[CALL UpdateLecturer(:pLecturerId,:pLecturerName,:pTitle,:pDepartment,:pEmail,:pTelephone)]]>
    </sql-query>
    
     <sql-query callable="true" name="getAllLecturer">
 	<return alias="Lecturer" class="entities.dao.Lecturer"/>
 		<![CDATA[CALL GetAllLecturer]]>
 	</sql-query>
 
 	 <sql-query callable="true" name="getIdByLecturerName">
 	<return alias="Lecturer" class="entities.dao.Lecturer"/>
 		<![CDATA[CALL GetIdByLecturerName(:pLecturerName)]]>
 	</sql-query>
 
</hibernate-mapping>
